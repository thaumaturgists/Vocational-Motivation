To create a floating button that appears at the top right corner of a user's window, you can use HTML and CSS. Here's a simple example:

### HTML
```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="styles.css">
    <title>Floating Button</title>
</head>
<body>
    <button class="floating-button">Click Me!</button>
</body>
</html>
```

### CSS (styles.css)
```css
body {
    margin: 0;
    padding: 0;
    height: 2000px; /* Just for demonstration to show scrolling */
}

.floating-button {
    position: fixed;
    top: 20px; /* Distance from the top */
    right: 20px; /* Distance from the right */
    padding: 10px 20px;
    background-color: #007BFF; /* Button color */
    color: white; /* Text color */
    border: none;
    border-radius: 5px;
    cursor: pointer;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    z-index: 1000; /* Ensure it stays on top of other elements */
}

.floating-button:hover {
    background-color: #0056b3; /* Darker shade on hover */
}
```

### Explanation
- **HTML**: The button is created with a simple `<button>` element.
- **CSS**:
  - The `.floating-button` class uses `position: fixed;` to keep the button in a fixed position relative to the viewport.
  - `top` and `right` properties position the button in the top right corner.
  - Additional styles are added for aesthetics, such as padding, background color, text color, border radius, and box shadow.

### Usage
You can copy the HTML and CSS code into your project. The button will float at the top right corner of the window, and you can customize the styles as needed.

===============================================================

To create an encapsulated function that generates a floating button in JavaScript, you can define a function that creates the button element, styles it, and appends it to the document body. Here's how you can do it:

### JavaScript Function
```javascript
function createFloatingButton(text, onClick) {
    // Create the button element
    const button = document.createElement('button');
    
    // Set the button text
    button.innerText = text;

    // Add styles to the button
    button.style.position = 'fixed';
    button.style.top = '20px'; // Distance from the top
    button.style.right = '20px'; // Distance from the right
    button.style.padding = '10px 20px';
    button.style.backgroundColor = '#007BFF'; // Button color
    button.style.color = 'white'; // Text color
    button.style.border = 'none';
    button.style.borderRadius = '5px';
    button.style.cursor = 'pointer';
    button.style.boxShadow = '0 4px 8px rgba(0, 0, 0, 0.2)';
    button.style.zIndex = '1000'; // Ensure it stays on top of other elements

    // Add hover effect
    button.addEventListener('mouseover', () => {
        button.style.backgroundColor = '#0056b3'; // Darker shade on hover
    });

    button.addEventListener('mouseout', () => {
        button.style.backgroundColor = '#007BFF'; // Original color
    });

    // Add click event listener
    button.addEventListener('click', onClick);

    // Append the button to the body
    document.body.appendChild(button);
}

// Example usage
createFloatingButton('Click Me!', () => {
    alert('Button clicked!');
});
```

### Explanation
1. **Function Definition**: The `createFloatingButton` function takes two parameters: `text` (the text to display on the button) and `onClick` (a callback function to execute when the button is clicked).
2. **Button Creation**: A button element is created using `document.createElement('button')`.
3. **Styling**: Inline styles are applied to position the button and style it.
4. **Event Listeners**:
   - A `mouseover` event listener changes the button's background color when hovered.
   - A `mouseout` event listener resets the background color when the mouse leaves the button.
   - A `click` event listener executes the provided `onClick` function.
5. **Appending the Button**: The button is appended to the document body.

### Usage
You can call the `createFloatingButton` function anywhere in your JavaScript code to create a floating button. The example usage at the end shows how to create a button that alerts a message when clicked. You can customize the button text and the click behavior as needed.